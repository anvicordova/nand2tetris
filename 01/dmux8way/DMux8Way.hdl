// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
    Not(in=sel[0], out=notSel0);
    Not(in=sel[1], out=notSel1);
    Not(in=sel[2], out=notSel2);

    And(a=notSel0, b=notSel1, out=aux1);
    And(a=aux1, b=notSel2, out=aux2);
    And(a=in, b=aux2, out=a);

    And(a=sel[0], b=notSel1, out=aux3);
    And(a=aux3, b=notSel2, out=aux4);
    And(a=in, b=aux4, out=b);

    And(a=notSel0, b=sel[1], out=aux5);
    And(a=aux5, b=notSel2, out=aux6);
    And(a=in, b=aux6, out=c);

    And(a=sel[0], b=sel[1], out=aux7);
    And(a=aux7, b=notSel2, out=aux8);
    And(a=in, b=aux8, out=d);

    And(a=aux1, b=sel[2], out=aux9);
    And(a=in, b=aux9, out=e);

    And(a=aux3, b=sel[2], out=aux10);
    And(a=in, b=aux10, out=f);

    And(a=aux5, b=sel[2], out=aux11);
    And(a=in, b=aux11, out=g);

    And(a=aux7, b=sel[2], out=aux12);
    And(a=in, b=aux12, out=h);
}